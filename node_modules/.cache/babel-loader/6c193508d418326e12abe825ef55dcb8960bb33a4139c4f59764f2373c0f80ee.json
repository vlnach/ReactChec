{"ast":null,"code":"var _jsxFileName = \"/Users/vlad/Desktop/3f1c5ee3-ddb9-4b74-9cd2-76b781c996ab/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst N = 8;\nconst idx = (r, c) => r * N + c;\nconst isDarkCell = (r, c) => (r + c) % 2 === 1;\nfunction Square({\n  value,\n  onSquareClick,\n  dark\n}) {\n  let className = \"square\";\n  if (dark) className += \" square--dark\";\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: className,\n    onClick: onSquareClick,\n    children: value === \"dark\" ? \"●\" : value === \"light\" ? \"○\" : \"\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n}\n_c = Square;\nfunction Board({\n  squares\n}) {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"status\",\n      children: \"\\u0428\\u0430\\u0448\\u043A\\u0438\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), [...Array(N)].map((_, r) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board-row\",\n      children: [...Array(N)].map((_, c) => {\n        const i = idx(r, c);\n        return /*#__PURE__*/_jsxDEV(Square, {\n          value: squares[i],\n          dark: isDarkCell(r, c),\n          onSquareClick: () => {}\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 15\n        }, this);\n      })\n    }, r, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true);\n}\n_c2 = Board;\nexport default function Game() {\n  _s();\n  const [history] = useState([initBoard()]);\n  const [currentMove] = useState(0);\n  const currentSquares = history[currentMove];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-board\",\n      children: /*#__PURE__*/_jsxDEV(Board, {\n        squares: currentSquares\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n_s(Game, \"vJX1uDxHh85MVKwANAkv5vd8Ln4=\");\n_c3 = Game;\nfunction initBoard() {\n  const b = Array(N * N).fill(null);\n  // dark сверху\n  for (let r = 0; r < 3; r++) {\n    for (let c = 0; c < N; c++) {\n      if (isDarkCell(r, c)) b[idx(r, c)] = \"dark\";\n    }\n  }\n  // light снизу\n  for (let r = N - 3; r < N; r++) {\n    for (let c = 0; c < N; c++) {\n      if (isDarkCell(r, c)) b[idx(r, c)] = \"light\";\n    }\n  }\n  return b;\n}\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Square\");\n$RefreshReg$(_c2, \"Board\");\n$RefreshReg$(_c3, \"Game\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","Fragment","_Fragment","N","idx","r","c","isDarkCell","Square","value","onSquareClick","dark","className","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","Board","squares","Array","map","_","i","_c2","Game","_s","history","initBoard","currentMove","currentSquares","_c3","b","fill","$RefreshReg$"],"sources":["/Users/vlad/Desktop/3f1c5ee3-ddb9-4b74-9cd2-76b781c996ab/src/App.js"],"sourcesContent":["import { useState } from \"react\";\n\nconst N = 8;\nconst idx = (r, c) => r * N + c;\nconst isDarkCell = (r, c) => (r + c) % 2 === 1;\n\nfunction Square({ value, onSquareClick, dark }) {\n  let className = \"square\";\n  if (dark) className += \" square--dark\";\n  return (\n    <button className={className} onClick={onSquareClick}>\n      {value === \"dark\" ? \"●\" : value === \"light\" ? \"○\" : \"\"}\n    </button>\n  );\n}\n\nfunction Board({ squares }) {\n  return (\n    <>\n      <div className=\"status\">Шашки</div>\n      {[...Array(N)].map((_, r) => (\n        <div className=\"board-row\" key={r}>\n          {[...Array(N)].map((_, c) => {\n            const i = idx(r, c);\n            return (\n              <Square\n                key={i}\n                value={squares[i]}\n                dark={isDarkCell(r, c)}\n                onSquareClick={() => {}}\n              />\n            );\n          })}\n        </div>\n      ))}\n    </>\n  );\n}\n\nexport default function Game() {\n  const [history] = useState([initBoard()]);\n  const [currentMove] = useState(0);\n  const currentSquares = history[currentMove];\n\n  return (\n    <div className=\"game\">\n      <div className=\"game-board\">\n        <Board squares={currentSquares} />\n      </div>\n    </div>\n  );\n}\n\nfunction initBoard() {\n  const b = Array(N * N).fill(null);\n  // dark сверху\n  for (let r = 0; r < 3; r++) {\n    for (let c = 0; c < N; c++) {\n      if (isDarkCell(r, c)) b[idx(r, c)] = \"dark\";\n    }\n  }\n  // light снизу\n  for (let r = N - 3; r < N; r++) {\n    for (let c = 0; c < N; c++) {\n      if (isDarkCell(r, c)) b[idx(r, c)] = \"light\";\n    }\n  }\n  return b;\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}